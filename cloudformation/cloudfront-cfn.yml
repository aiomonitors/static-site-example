AWSTemplateFormatVersion: 2010-09-09

Parameters:
  DomainName:
    Type: String
    Description: The Domain to deploy to
    Default: static-site-example.shihabprojects.link
  HostedZoneId:
    Type: String
    Description: The hosted zone id to create record in
    Default: Z03783752ULSUSN7M1LWP
  CiRole:
    Type: String
    Description: The role for CI to create BucketPolicy with
    Default: StaticSiteExampleRole

Resources:
  Cert:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref DomainName
      ValidationMethod: DNS
      DomainValidationOptions:
        - DomainName: !Ref DomainName
          HostedZoneId: !Ref HostedZoneId
      Tags:
        - Key: Domain
          Value: !Ref DomainName

  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html
  BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      PolicyDocument:
        Id: MyPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 
              - 's3:GetObject'
              - 's3:GetObjectVersion'
            Resource: !Join 
              - ''
              - - 'arn:aws:s3:::'
                - !Ref S3Bucket
                - /*
          - Sid: GithubUploadObjects
            Effect: Allow
            Principal: 
              AWS: !Join ['', ['arn:aws:iam::', !Ref AWS::AccountId, ':role/', !Ref CiRole]]
            Action: 's3:PutObject'
            Resource: !Join 
              - ''
              - - 'arn:aws:s3:::'
                - !Ref S3Bucket
                - /*
      Bucket: !Ref S3Bucket
  CloudfrontDistribution:
    Type: 'AWS::CloudFront::Distribution'
    Properties: 
        DistributionConfig:
            Aliases:
              - !Ref DomainName
            Enabled: True
            IPV6Enabled: True
            DefaultCacheBehavior:
                CachePolicyId: b2884449-e4de-46a7-ac36-70bc7f1ddd6d
                TargetOriginId: s3-bucket
                ViewerProtocolPolicy: redirect-to-https
            Origins:
                -   Id: s3-bucket
                    DomainName: !Join ['', [!Ref S3Bucket, '.s3-website-', !Ref 'AWS::Region', '.amazonaws.com']]
                    CustomOriginConfig:
                      OriginProtocolPolicy: http-only
            ViewerCertificate:
              AcmCertificateArn: !Ref Cert
              MinimumProtocolVersion: TLSv1
              SslSupportMethod: sni-only
        Tags:
          - Key: Domain
            Value: !Ref DomainName
  
  RecordSet:
    Type: 'AWS::Route53::RecordSet'
    Properties:
      Name: !Ref DomainName
      HostedZoneId: !Ref HostedZoneId
      Comment: DNS name for cloudfront distribution.
      AliasTarget:
        DNSName: !GetAtt CloudfrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2
      Type: A
  
  
                
Outputs:
    WebsiteURL:
        Value: !GetAtt 
          - S3Bucket
          - WebsiteURL
        Description: URL for website hosted on S3
    S3BucketSecureURL:
        Value: !Join 
          - ''
          - - 'https://'
            - !GetAtt 
              - S3Bucket
              - DomainName
        Description: Name of S3 bucket to hold website content
    S3BucketName:
        Value: !Ref S3Bucket
        Description: BucketName for S3
    CloudFrontDomain:
        Value: !GetAtt CloudfrontDistribution.DomainName
        Description: Domain name for CloudFront Distribution
    CloudfrontDeploymentID:
      Value: !GetAtt CloudfrontDistribution.Id
      Description: Deployment ID for Cloudfront distribution
    
    
