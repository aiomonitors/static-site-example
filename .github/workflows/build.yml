name: Production Build
run-name: Static Site Production Build

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ROLE: ${{ secrets.AWS_ROLE }}
  AWS_STACK_NAME: ${{ secrets.AWS_STACK_NAME }}

# Permission can be added at job level or workflow level    
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

on:
  workflow_run:
    workflows:
      - "Deploy Cloudformation Stack - Production"
    branches: [main]
    types:
      - completed
jobs:
  build:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Build Application
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 16.16.0
          cache: 'yarn'
          always-auth: true
      - run: npm install -g yarn
      - name: Cache NodeModules
        id: node-module-cache
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ./node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Packages
        run: yarn install --frozen-lockfile
        if: steps.node-module-cache.outputs.cache-hit != 'true'
      - name: Build Application
        run: yarn build
      - name: Upload Next Static Build
        uses: actions/upload-artifact@master
        with:
          name: static-site-build
          path: ./out
  upload-s3:
    needs: build
    name: Upload Files to S3
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          role-to-assume: ${{ env.AWS_ROLE }} #change to reflect your IAM roleâ€™s ARN
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}
      - uses: actions/download-artifact@master
        with:
          name: static-site-build
          path: ./out
      - uses: geekyeggo/delete-artifact@v2
        with:
          name: static-site-build
      - id: query_bucket
        name: Get S3 Bucket Name
        run: |
          echo "::set-output name=BucketName::$(aws cloudformation describe-stacks --stack-name ${{ env.AWS_STACK_NAME }} --query "Stacks[0].Outputs[2].OutputValue")"
      - name: Sync Files
        run: |
          aws s3 sync ./out s3://${{ steps.query_bucket.outputs.BucketName }}
        
